--- Consolida CostosGastos de la operacion 

CREATE OR REPLACE TABLE `neutro-erpnext.balances_financieros.CostosGastosDash` AS
WITH Gastos_Nito AS
(   SELECT 
        fecha_operacion as Fecha, 
        "delivery" AS Concepto,
        "" AS Detalle,
        "Nito" AS Comprador,
        "gasto" AS Comentario,
        SUM(Pago_chofer) AS Salida

    from `neutro-erpnext.CostosGastos.costoGastoEmbarques`
    GROUP BY 1
    ),
Gastos_Charlie AS
(   SELECT *
    FROM `neutro-erpnext.balances_financieros.CostosGastosAll`
    ),
Gastos_Labor AS
(   SELECT 
        CAST(string_field_0 AS DATE) Fecha,
        "pickers 5hrs" AS Concepto,
        "Zubale" AS Detalle,
        "Carlos" AS Comprador,
        "gasto" AS Comentario,
        (CAST(string_field_1 AS NUMERIC) * CAST(string_field_2 AS NUMERIC)) Salida
    FROM `neutro-erpnext.data_admon.labor_costs`
    WHERE string_field_0 <> "Fecha"
    AND string_field_1 is not null
    UNION ALL
    SELECT 
        CAST(string_field_0 AS DATE) Fecha,
        "pickers 6hrs" AS Concepto,
        "Zubale" AS Detalle,
        "Carlos" AS Comprador,
        "gasto" AS Comentario,
        (CAST(string_field_3 AS NUMERIC) * CAST(string_field_4 AS NUMERIC)) Salida
    FROM `neutro-erpnext.data_admon.labor_costs`
    WHERE string_field_0 <> "Fecha"
    AND string_field_1 is not null
    UNION ALL 
    SELECT 
        CAST(string_field_0 AS DATE) Fecha,
        "compradores" AS Concepto,
        "alima" AS Detalle,
        "Carlos" AS Comprador,
        "gasto" AS Comentario,
        (CAST(string_field_5 AS NUMERIC) * CAST(string_field_6 AS NUMERIC)) AS Salida
    FROM `neutro-erpnext.data_admon.labor_costs`
    WHERE string_field_0 <> "Fecha"
    AND string_field_1 is not null
    ),
numero_ordenes AS
(   SELECT CAST(delivery_date as DATE) as Fecha, COUNT(DISTINCT(order_uuid)) numero_ordenes
    FROM `neutro-erpnext.output_tbls.web_orders_details` 
    WHERE status <> 'canceled' 
    GROUP BY 1),

Total_Compras AS
(   SELECT 
        CAST(delivery_date AS DATE) Fecha,
        --delivery_date as FECHA,
        "product_name" AS Concepto,
        "" AS Detalle,
        "" AS Comprador,
        "" AS Comentario,
        sum(total_price) as Salida
    FROM  `neutro-erpnext.balances_financieros.consolidado_compras_all`
    WHERE true
    --delivery_date <> "Fecha"
    AND delivery_date >= "2022-03-01"
    GROUP BY 1
    )

SELECT *,
    CASE 
        WHEN lower(Concepto) in ("pack material", "bolsas de papel", "cajas plastico", "cajas de plastico", "taras", "taras tomate") then "Packaging"
        WHEN lower(Concepto) in ("3pl", "estacionamiento", "camioneta", "3pl mario transporte", "3pl zubale", "piso y carga") 
        then "Freight_in"
        WHEN lower(Concepto) in ("delivery", "camioneta", "cargadores", "gasolina", "vi√°ticos") then "Freight_out"
        WHEN lower(Concepto) in ("diablero", "entrada", "compras subasta", "santiago","estacionamiento jamaica") then "Purchasing"
        WHEN lower(Concepto) in ("product_name", "producto", "pago chiles") then "Fruits and Vegs"
        WHEN lower(Concepto) in ("pickers 5hrs", "pickers 6hrs") then "Picking"
        WHEN lower(Concepto) in ("compradores") then "Purchasing"
        WHEN lower(Concepto) in ("renta") then "WH costs"


    else "Others"
    end as Cost_Order

FROM 
(   SELECT Fecha, Concepto, Detalle, Comprador, Comentario, Salida FROM Gastos_Nito
    UNION ALL 
    SELECT Fecha, Concepto, Detalle, Comprador, Comentario, Salida FROM Gastos_Charlie
    UNION ALL 
    SELECT Fecha, Concepto, Detalle, Comprador, Comentario, Salida FROM Gastos_Labor
    UNION ALL 
    SELECT Fecha, Concepto, Detalle, Comprador, Comentario, Salida FROM Total_Compras
)
LEFT OUTER JOIN numero_ordenes USING (Fecha)
--left outer join Total_Compras using (Fecha)
ORDER BY Fecha Desc;

CREATE OR REPLACE TABLE `neutro-erpnext.balances_financieros.CostosGastosDash_agrupado` AS
WITH tabla_Cost_Orders AS
(   SELECT Cost_Order, 1 as key FROM `neutro-erpnext.balances_financieros.CostosGastosDash` GROUP BY 1),
tabla_fechas AS
(   SELECT Fecha, 1 as key FROM `neutro-erpnext.balances_financieros.CostosGastosDash` GROUP BY 1),
tabla_all AS
(   SELECT *except(key) 
    FROM tabla_fechas
    LEFT OUTER JOIN tabla_Cost_Orders USING (key) ),
numero_ordenes AS
(   SELECT CAST(delivery_date as DATE) as Fecha, COUNT(DISTINCT(order_uuid)) numero_ordenes
    FROM `neutro-erpnext.output_tbls.web_orders_details` 
    WHERE status <> 'canceled' 
    GROUP BY 1)
SELECT 
    Fecha,
    Cost_Order,
    IFNULL(nord.numero_ordenes,0) as numero_ordenes,
    SUM(IFNULL(Salida,0)) AS CostoGasto
FROM tabla_all
LEFT OUTER JOIN `neutro-erpnext.balances_financieros.CostosGastosDash` USING (Fecha, Cost_Order)
LEFT OUTER JOIN numero_ordenes nord USING (Fecha)
GROUP BY 1,2,3
ORDER BY 1 desc;

CREATE OR REPLACE TABLE `neutro-erpnext.balances_financieros.CostosGastosDash_score` AS
WITH costo_ordenes AS
(   SELECT 
        Fecha,
        CASE WHEN Cost_Order = "Packaging" THEN  CostoGasto END AS Packaging,
        CASE WHEN Cost_Order = "Fruits and Vegs" THEN CostoGasto END AS Fruits_and_Vegs,
        CASE WHEN Cost_Order = "Freight_in" THEN CostoGasto END AS Freight_in,
        CASE WHEN Cost_Order = "Freight_out" THEN CostoGasto END AS Freight_out,
        CASE WHEN Cost_Order = "Purchasing" THEN CostoGasto END AS Purchasing,
        CASE WHEN Cost_Order = "Picking" THEN CostoGasto END AS Picking,
        CASE WHEN Cost_Order = "WH costs" THEN CostoGasto END AS WH_cost,
        CostoGasto,
    FROM `neutro-erpnext.balances_financieros.CostosGastosDash_agrupado`
    GROUP BY 1,2,3,4,5,6,7,8,9),

orden_promedio AS
(   SELECT CAST(delivery_date as DATE) as Fecha, order_uuid, SUM(total_price) as total
    FROM `neutro-erpnext.output_tbls.web_orders_details` 
    WHERE status <> 'canceled' 
    GROUP BY 1,2
),

compras_total AS
(
    SELECT 
        CAST(delivery_date AS DATE) Fecha,
        sum(total_price) as Compras,
    FROM  `neutro-erpnext.balances_financieros.consolidado_compras_all`
    GROUP BY 1
),

costo_replace AS
(
    SELECT
        FECHA as Fecha,
        SUM(COSTO) + SUM(CREDITOS) AS Replace,
    FROM `neutro-erpnext.CX_QA_incidencias.Incidencias_Follow_Up`
    GROUP BY 1
)

SELECT 
    Fecha,
    Packaging,
    Fruits_and_Vegs,
    Freight_in,
    Freight_out,
    Purchasing,
    Picking,
    WH_cost,
    CostoGasto,
    Compras,
    Replace,
    COUNT(order_uuid) as numero_ordenes,
    SUM(total) AS Venta,
    (SUM(total) - Compras)/SUM(total) AS Trade_margin
FROM costo_ordenes
LEFT OUTER JOIN compras_total USING (Fecha)
LEFT OUTER JOIN orden_promedio prom USING (Fecha)
LEFT OUTER JOIN costo_replace USING (Fecha)
WHERE CostoGasto is not null
GROUP BY 1,2,3,4,5,6,7,8,9,10,11;





